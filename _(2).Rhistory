dRdt <- Params$r * R * (1 - R / Params$K)  - Params$a * C * R #Growth rate calculation (prey)
dCdt <- - Params$mu * C + Params$g * Params$a * C * R
list(c(dRdt, dCdt)) # output the resulting vectors in a list
}
###Simulating population dynamics###
out <- ode(R_vect, func = lotka_volterra, times = time_vect, parms = Params)
##Extracting time and population size as vectors##
time <- out[,"time"] #time
R <- out[,"R"] #population size
C <- out[, "C"]
###Plotting###
##Population abundance across time##
par(mfrow = c(1,2))
plot(time, R, type='l', col='blue', ylab = "Population (R, C)", xlab = "Time (t)",
main = "D-D Lotka-Volterra Predator-Prey: Time trajectory", ylim = c(0, max(c(R,C))))
lines(time, C, col = "red")
legend("topright", legend = c("Prey (R)", "Predator (C)"),
col = c("Blue", "Red"), cex = 0.5, lwd = 2,
title  = "Population abundance")
##Phase plane and isoclines##
plot(R,C, type = "l", xlim = c(0, max(c(R,mu/(g*a)))), ylim = c(0, max(C)), col = "green",
xlab = "Prey Population (R)", ylab = "Predator Population (C)",
main = "D-D Lotka-Volterra Predator-Prey: Phase Plane")
abline(b = -r/(a*K), a = r/a, col = "blue")
abline(v = mu/(g*a), col = "red")
legend("bottomleft", legend = c("Prey Isocline", "Predator Isocline"),
col = c("Blue", "Red"), cex = 0.5, lwd = 2,
title  = "Isoclines")
rm(list = ls())
Temptation <- 10
Reward <- 5
Punishment <- 2
Sucker <- 0
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
rm(list = ls())
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
rm(list = ls())
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
rm(list = ls())
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Evolutionary Biology - Patterns and Processes BIOR89/Adaptation and Natural Selection/Week 4/R exercises/prisoner_dilemma.R")
wf <- function(N, ngens, p0=1/3, mu=0) {
N <- 2*N  # diploid adjustment
# initialize an empty matrix
gns <- matrix(NA, nrow=ngens, ncol=N)
# initialize the first generation, with two alleles, one at freq
# p0
alleles <- 2
gns[1, ] <- sample(1:2, N, replace=TRUE, prob=c(p0, 1-p0))
for (i in 2:ngens) {
gns[i, ] <- gns[i-1, sample(1:N, N, replace=TRUE)]
if (mu > 0) {
# add mutations to this generation
muts <- rbinom(N, 1, prob=mu)
new_alleles <- sum(muts)
alleles <- alleles + new_alleles
if (new_alleles) {
# there are mutations, add to population.
gns[i, ] <- ifelse(muts, sample(alleles), gns[i, ])
}
}
}
gns
}
het <- function(x) {
tbl <- table(x)
1 - sum((tbl/sum(tbl))^2)
}
my.sims<-replicate(100,wf(N=100, ngens=150))
h <- apply(my.sims, 1, het)
plot(h, type='l', xlab='generation', ylab='heterozygosity')
p0<-0.3
N<-500
ngens<-150
my.sims<-replicate(40,wf(N=N, ngens=ngens,p0=p0))
#Visualizing opulation divergence by genetic drift
plot(type="n",y=c(0,1),x=c(0,ngens),xlab="Time, generations",ylab="Frequency, p", cex.lab=1.4,cex.axis=1.2)
apply(my.sims,3,function(sim){
lines(c(p0,apply(sim==1,1,mean)),,col=adjustcolor("black",0.3))
})
lines(c(p0,apply(my.sims[,,1]==1,1,mean)),col="red",lwd=2)
lines(rowMeans(apply(my.sims,3,function(sim){c(p0,apply(sim==1,1,mean))})),col="blue",lwd=2)
abline(h=p0,col="blue",lwd=2,lty=3)
legend(x="topright",legend=c("1 sim.","Mean sim.","Expectation"),col=c("red","blue","blue"),lty=c(1,1,2),bg="white")
2*exp(5)
ln(4)
log(4)
log(2)
log(4)-log(2)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(x)
View(x)
source("~/.active-rstudio-document")
View(x)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
o0=2000
r0=1000
initial=c(o0,r0)
t=10
x=array(dim=c(2,t))
x<-cbind()
x[1:2,1]<-(o0,r0)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
o0=2000
r0=1000
initial=c(o0,r0)
t=10
x=array(dim=c(2,t))
x<-cbind(initial, x)
x[1:2,1]<-(o0,r0)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(x)
source("~/.active-rstudio-document")
View(x)
source("~/.active-rstudio-document")
View(x)
View(x)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(A)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
eigen(A)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
u+v
u*v
source("~/.active-rstudio-document")
u%*%v
source("~/.active-rstudio-document")
sqrt(sum(u*u))
B=matrix(c(1,2,3,0,0,0,4,5,6),3,3)
View(B)
source("~/.active-rstudio-document")
B%*%u
B%*%B
source("~/.active-rstudio-document")
(B%*%)%*%u
(B%*%B)%*%u
det(X)
source("~/.active-rstudio-document")
det(X)
eigen(X)
eigen(X)
e<-eigen(X)
source("~/.active-rstudio-document")
X%*%v
X%*%e$vectors[1]
X%*%e$vectors(1)
e$vectors(1)
e$vectors[1]
X%*%e$vectors[:,1]
X%*%e$vectors[,1]
a<-X%*%e$vectors[,1]
a/e$values[1]
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
x
draw_a_tree()
source("~/.active-rstudio-document")
draw_a_small_tree()
source("~/.active-rstudio-document")
draw_a_small_tree()
source("~/.active-rstudio-document")
draw_a_tree()
draw_a_small_tree()
arr=cbind(x,y)
View(arr)
View(arr)
length(arr)
A=matrix(c(0,1,0,1),2,2)
source("~/.active-rstudio-document")
draw_transformed_tree()
source("~/.active-rstudio-document")
draw_transformed_tree()
draw_transformed_tree(A)
arr[,2]
source("~/.active-rstudio-document")
draw_transformed_tree(A)
source("~/.active-rstudio-document")
draw_transformed_tree(A)
arr[1,1:2]
source("~/.active-rstudio-document")
View(arr)
source("~/.active-rstudio-document")
View(arr)
arr
source("~/.active-rstudio-document")
arr
x
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(arr)
mat=matrix(c(x,y),length(x),2)
View(mat)
source("~/.active-rstudio-document")
mat<-t(mat)
View(mat)
source("~/.active-rstudio-document")
draw_transformed_tree()
draw_transformed_tree(A)
draw_transformed_tree(A)
source("~/.active-rstudio-document")
draw_transformed_tree(A)
arr
source("~/.active-rstudio-document")
draw_transformed_tree(A)
source("~/.active-rstudio-document")
tra
tra=A%*%mat
View(tra)
View(mat)
A=matrix(c(0,1,1,0),2,2)
mat=matrix(c(x,y),length(x),2)
mat<-t(mat)
View(tra)
View(mat)
rm(list=ls())
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 1 The absolute basics/Scripts/drawtrees.R")
rm(list=ls())
draw_a_tree<-function() {
# x-coordinates of nodes in the tree
# (NA values creates breaks in the line, 'lifting the pen'):
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
# y-coordinates:
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
# Plot a brown tree, with thick branches
plot(x, y, type='l', col='brown', lwd=8, xlim=c(-2,2), ylim=c(-2,2))
# thickness
}
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
draw_a_small_tree <- function() {
# x-coordinates of nodes in the tree
# (NA values creates breaks in the line, 'lifting the pen'):
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
# y-coordinates:
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
# Plot a brown tree, with thick branches
lines(1/2*x, 1/2*y, type='l', col='green', lwd=8) # lwd sets the line
# thickness
}
A=matrix(c(0,1,1,0),2,2)
draw_transformed_tree=function(A){
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
mat=matrix(c(x,y),length(x),2)
mat<-t(mat)
tra=A%*%mat
lines(tra[1,], tra[2,], type='l', col='green', lwd=8) # lwd sets the line
}
mat=matrix(c(x,y),length(x),2)
View(mat)
mat<-t(mat)
rm(list=ls())
draw_a_tree<-function() {
# x-coordinates of nodes in the tree
# (NA values creates breaks in the line, 'lifting the pen'):
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
# y-coordinates:
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
# Plot a brown tree, with thick branches
plot(x, y, type='l', col='brown', lwd=8, xlim=c(-2,2), ylim=c(-2,2))
# thickness
}
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
draw_a_small_tree <- function() {
# x-coordinates of nodes in the tree
# (NA values creates breaks in the line, 'lifting the pen'):
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
# y-coordinates:
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
# Plot a brown tree, with thick branches
lines(1/2*x, 1/2*y, type='l', col='green', lwd=8) # lwd sets the line
# thickness
}
A=matrix(c(0,1,-1,0),2,2)
draw_transformed_tree=function(A){
x <- c(0, 0, 0.7, 1.5, NA, 0.7, 0.8, NA, 0, -0.6, -1.2, NA, -0.6, -
0.5)
y <- c(0, 1, 1.3, 1.4, NA, 1.3, 1.8, NA, 1.0, 1.4, 1.7, NA, 1.4,
2.0)
mat=matrix(c(x,y),length(x),2)
mat<-t(mat)
tra=A%*%mat
lines(tra[1,], tra[2,], type='l', col='green', lwd=8) # lwd sets the line
}
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 1 The absolute basics/Scripts/drawtrees.R")
draw_transformed_tree(A)
draw_a_tree()
draw_transformed_tree(A)
A=matrix(c(1,0,0,1),2,2)
draw_transformed_tree(A)
A=-1*matrix(c(1,0,0,1),2,2)
draw_transformed_tree(A)
A=matrix(c(-1,0,0,1),2,2)
draw_transformed_tree(A)
find_codon=function(dnaseq,codon, rf){
positions=NULL
codon<-unlist(strsplit("atg",''))
for (i in seq(rf, length(dnaseq)-2, by=3)){
if (all(codon==dnaseq[i:(i+2)])){
positions=append(positions, i)
}
}
return(positions)
}
setwd("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2")
mito_fasta<-read.fasta('NC_012920.fasta')
library('seqinr')
mito_fasta<-read.fasta('NC_012920.fasta')
dnaseq <- mito_fasta$NC_012920.1
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/codonfinder.R")
find_codon(dnaseq, 'atg', 2)
find_codon(dnaseq, atg, 2)
find_codon(dnaseq, "atg", 2)
find_codon(dnaseq, "atg", 1)
startcodons=c("atg", "ata", "att", "ata", "gtg")
codon="atg"
any(codon==startcodon)
any(codon==startcodons)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findstartcodons.R")
startcodons(dnaseq[1:500], 1)
warnings()
(any(startcodons==dnaseq[i:(i+2)])
(any(startcodons==dnaseq[i:(i+2)])
x
(any(startcodons==dnaseq[i:(i+2)])
(any(startcodons==dnaseq[i:(i+2)])x
any(startcodons==dnaseq[i:(i+2)]
(any(startcodons==dnaseq[i:(i+2)])
any(startcodons==dnaseq[i:(i+2)])
any(startcodons==dnaseq[3:(3+2)])
any(codon==startcodons)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findstartcodons.R")
any(codon==startcodons)
any(codon=startcodons)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findstartcodons.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findstartcodons.R")
startcodon(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findstartcodons.R")
startcodon(dnaseq[1:500],1)
warnings()
i=1
threepair<-unlist(strsplit(dnaseq[i:(i+2)],''))
strsplit(codon,'')
unlist(strsplit(codon,''))
paste(dnaseq[i:(i+2)],'')
toString(dnaseq[i:(i+2)])
str_flatten(dnaseq[i:(i+2)],'')
str_flatten
install.packages("tidyverse")
# setwd("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2")
# library('seqinr')
library('tidyverse')
str_flatten(dnaseq[i:(i+2)],'')
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findstartcodons.R")
startcodon(dnaseq[1:500],1)
source("~/.active-rstudio-document")
stopcodon(dnaseq[1:500], 1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
e=c(1,2,3)
e[-1]
e[:-1]
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/findopenreadingframes.R")
find_all_open_frames(dnaseq[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
whichorf(dnaseq[1:500])
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
whichorf(dnaseq[1:500])
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
whichorf(dnaseq[1:500])
rm(list=ls())
setwd("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2")
library('seqinr')
library('tidyverse')
mito_fasta<-read.fasta('NC_012920.fasta')
dnaseq <- mito_fasta$NC_012920.1source("complement.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
library('seqinr')
library('tidyverse')
mito_fasta<-read.fasta('NC_012920.fasta')
dnaseq <- mito_fasta$NC_012920.1source("complement.R")
setwd("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2")
library('seqinr')
library('tidyverse')
mito_fasta<-read.fasta('NC_012920.fasta')
dnaseq <- mito_fasta$NC_012920.1
source("complement.R")
source("findopenreadingframes.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
whichorf(dnaseq[1:500])
rf=1
for (i in seq(rf, length(dnaseq)-2, by=3)){
print(i)
}
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
whichorf(dnaseq[1:500])
find_all_open_frames(dnaseq[1:500],1)
find_all_open_frames(dnaseq[1:500],2)
find_all_open_frames(dnaseq[1:500],3)
compli<-create_complement(dnaseq)
find_all_open_frames(compli[1:500],1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
whichorf(dnaseq[1:500])
compli<-create_complement(dnaseq[1:500])
find_all_open_frames(compli,1)
whichorf(dnaseq)
both=c(dnaseq, compli)
both=cbind(dnaseq, compli)
compli<-create_complement(dnaseq)
both=cbind(dnaseq, compli)
both=rbind(dnaseq, compli)
both=cbind(dnaseq, compli)
lengths=matrix(0,2,3)
both=cbind(dnaseq, compli)
both=cbind(dnaseq, compli)
both=c(dnaseq, compli)
both=data.frame(dnaseq, compli)
aaa=(dnaseq, compli)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 2/whichorf.R")
whichorf(dnaseq[1:500])
max(lengths)
which(max(lengths))
which.max(lengths)
which(lengths == max(lengths), arr.ind = TRUE)
View(lengths)
whichorf(dnaseq[1:500])
which(lengths == max(lengths), arr.ind = TRUE)
lengths==max(lengths)
lengths<-whichorf(dnaseq[1:500])
which(lengths == max(lengths), arr.ind = TRUE)
lengths<-whichorf(dnaseq[1:500])
pos=which(lengths == max(lengths), arr.ind = TRUE)
cat("Maximum opening reading frame is on strand", pos[1],"with open reading frame", pos[2],"with a length of", max(lengths))
