n=100
c=seq(0,100,1)
dcdt=function(c,Kmax,kn,n) return(-(Kmax*c*n)/(kn+c))
plot(c,dcdt(c,Kmax,kn, n), type='l')
Kmax=10
kn=10
n=100
c=seq(-100,100,1)
dcdt=function(c,Kmax,kn,n) return(-(Kmax*c*n)/(kn+c))
plot(c,dcdt(c,Kmax,kn, n), type='l')
I=2 #inflow
mu=1 #outflow
dcdtI=function(c,Kmax,kn,n, I, mu) return(I-(mu*c)-(Kmax*c*n)/(kn+c))
plot(c,dcdtI(c,Kmax,kn, n, I, mu), type='l')
I=10 #inflow
mu=2 #outflow
dcdtI=function(c,Kmax,kn,n, I, mu) return(I-(mu*c)-(Kmax*c*n)/(kn+c))
plot(c,dcdtI(c,Kmax,kn, n, I, mu), type='l')
abline(NULL,NULL,h=0)
I=10 #inflow
mu=20 #outflow
dcdtI=function(c,Kmax,kn,n, I, mu) return(I-(mu*c)-(Kmax*c*n)/(kn+c))
plot(c,dcdtI(c,Kmax,kn, n, I, mu), type='l')
abline(NULL,NULL,h=0)
r=2
a=0.5
mu=0.1
LV_isoclines<-function(r,a,mu){
dndt=r*n-a*n*p
dpdt=a*n*p-mu*p
pp=r/a
nn=mu/a
isos=c("preyiso"=pp, "prediso"=nn, "preytriv"=0,"predtriv"=0)
return(isos)
}
LV_isoclines(r,a,mu)
r=2
a=0.5
mu=0.1
LV_isoclines<-function(r,a,mu){
# dndt=r*n-a*n*p
# dpdt=a*n*p-mu*p
pp=r/a
nn=mu/a
isos=c("preyiso"=pp, "prediso"=nn, "preytriv"=0,"predtriv"=0)
return(isos)
}
LV_isoclines(r,a,mu)
plot.new()
abline(NULL,NULL, h=isos$predtriv, col="orange")
isos<-LV_isoclines(r,a,mu)
plot.new()
abline(NULL,NULL, h=isos$predtriv, col="orange")
isos(predtriv)
isos[predtriv]
str(isos)
isos("predtriv")
isos["predtriv"]
plot.new()
abline(NULL,NULL, h=isos["predtriv"], col="orange")
abline(NULL,NULL, v=isos["preytriv"], col="green")
abline(NULL,NULL, v=isos["prediso"], col="orange")
abline(NULL,NULL, h=isos["preyiso"], col="green")
abline(NULL,NULL, h=isos["preyiso"], col="green")
abline(NULL,NULL, h=isos["preyiso"]+2, col="green")
isos
abline(NULL,NULL, h=isos["preyiso"]-2, col="green")
plot.new()
abline(NULL,NULL, h=isos["preyiso"], col="green")
prediso
abline(NULL,NULL, v=isos["preytriv"], col="green")
abline(NULL,NULL, h=isos["predtriv"], col="orange")
abline(NULL,NULL, v=isos["prediso"], col="orange")
abline(NULL,NULL, h=isos["preyiso"], col="green")
plot.new()
abline(NULL,NULL, v=isos["preytriv"], col="green")
abline(NULL,NULL, h=isos["preyiso"], col="green")
abline(NULL,NULL, h=isos["preyiso"], col="green")
abline(NULL,NULL, h=isos["preyiso"], col="green")
abline(NULL,NULL, h=isos["preyiso"], col="green")
abline(NULL,NULL, v=isos["prediso"], col="orange")
abline(NULL,NULL, h=2, col="green")
abline(NULL,NULL, h=0.2, col="green")
plot.new(xlim=c(-1,10),ylim=c(-1,10))
plot(1,1, col="white",xlim=c(-1,10),ylim=c(-1,10))
plot(x=1,y=1, col="white",xlim=c(-1,10),ylim=c(-1,10))
abline(NULL,NULL, h=isos["predtriv"], col="orange")
abline(NULL,NULL, v=isos["preytriv"], col="green")
abline(NULL,NULL, v=isos["prediso"], col="orange")
abline(NULL,NULL, h=isos["preyiso"], col="green")
plot(x=1,y=1, col="white",xlim=c(0,5),ylim=c(0,5))
abline(NULL,NULL, h=isos["predtriv"], col="orange")
abline(NULL,NULL, v=isos["preytriv"], col="green")
abline(NULL,NULL, v=isos["prediso"], col="orange")
abline(NULL,NULL, h=isos["preyiso"], col="green")
plot(x=1,y=1, col="white",xlim=c(0,5),ylim=c(0,5),
xlab="Prey", ylab="Predator")
abline(NULL,NULL, h=isos["predtriv"], col="orange")
abline(NULL,NULL, v=isos["preytriv"], col="green")
abline(NULL,NULL, v=isos["prediso"], col="orange")
abline(NULL,NULL, h=isos["preyiso"], col="green")
plot(x=1,y=1, las=1,col="white",xlim=c(0,5),ylim=c(0,5),
xlab="Prey", ylab="Predator")
abline(NULL,NULL, h=isos["predtriv"], col="orange")
abline(NULL,NULL, v=isos["preytriv"], col="green")
abline(NULL,NULL, v=isos["prediso"], col="orange")
abline(NULL,NULL, h=isos["preyiso"], col="green")
abline(NULL,NULL, h=isos["predtriv"], col="orange", lwd=2)
abline(NULL,NULL, h=isos["predtriv"], col="orange", lwd=3)
plot(x=1,y=1, las=1,col="white",xlim=c(0,5),ylim=c(0,5),
xlab="Prey", ylab="Predator")
abline(NULL,NULL, h=isos["predtriv"], col="orange", lwd=3)
abline(NULL,NULL, v=isos["preytriv"], col="green", lwd=3)
abline(NULL,NULL, v=isos["prediso"], col="orange", lwd=3)
abline(NULL,NULL, h=isos["preyiso"], col="green", lwd=3)
("topright", legend=c("Predator", "Prey"),
legend(1,95, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='lightblue')
legend(1,1, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='lightblue')
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='lightblue')
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='lightgreen')
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='mint')
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='drkseagreen1')
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='darkseagreen1')
plot(x=1,y=1, las=1,col="white",xlim=c(0,5),ylim=c(0,5),
xlab="Prey", ylab="Predator")
abline(NULL,NULL, h=isos["predtriv"], col="orange", lwd=3)
abline(NULL,NULL, v=isos["preytriv"], col="green", lwd=3)
abline(NULL,NULL, v=isos["prediso"], col="orange", lwd=3)
abline(NULL,NULL, h=isos["preyiso"], col="green", lwd=3)
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='darkseagreen1')
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=1.8,
title="Actors", text.font=4, bg='darkseagreen1')
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='darkseagreen1')
r=2
a=0.5
mu=0.1
LV_isoclines<-function(r,a,mu){
# dndt=r*n-a*n*p
# dpdt=a*n*p-mu*p
pp=r/a
nn=mu/a
isos=c("preyiso"=pp, "prediso"=nn, "preytriv"=0,"predtriv"=0)
plot(x=1,y=1, las=1,col="white",xlim=c(0,5),ylim=c(0,5),
xlab="Prey", ylab="Predator")
abline(NULL,NULL, h=isos["predtriv"], col="orange", lwd=3)
abline(NULL,NULL, v=isos["preytriv"], col="green", lwd=3)
abline(NULL,NULL, v=isos["prediso"], col="orange", lwd=3)
abline(NULL,NULL, h=isos["preyiso"], col="green", lwd=3)
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='darkseagreen1')
return(isos)
}
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predatorprey.R")
Lv_isoclines(r,a,mu)
LV_isoclines(r,a,mu)
LV_sys(0, NULL, r,a, mu)
source("~/.active-rstudio-document")
LV_sys(0, NULL, r,a, mu)
LV_sys(0, c(10,10), r,a, mu)
source("~/.active-rstudio-document")
LV_sys(0, c(1,10), r,a, mu)
LV_sys(0, c(2,3), r,a, mu)
out <- ode( y = c(2,3), func = LV_sys, times = timevec, parms = params)
library("desolve")
library("deSolve")
r=2
a=0.5
mu=0.1
timvec=seq(0,200,1)
params<-c("r"=2,"a"=0.5,"mu"=0.1)
library("deSolve")
out <- ode( y = c(2,3), func = LV_sys, times = timevec, parms = params)
timevec=seq(0,200,1)
out <- ode( y = c(2,3), func = LV_sys, times = timevec, parms = params)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
out <- ode( y = c(2,3), func = LV_sys, times = timevec, parms = params)
View(out)
# plot the prey densities in blue:
plot( out[,1], out[,2], type=’l’, col=’blue’ )
# plot the prey densities in blue:
plot( out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,2], col="red" )
plot( out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,2], col="red" )
plot( out[,1], out[,2], type="l", col="blue")
lines( out[,1], out[,2], col="red" )
# add the predator densities in red:
lines( out[,1], out[,2],type="l" col="red" )
# add the predator densities in red:
lines( out[,1], out[,2],type="l", col="red" )
# plot the prey densities in blue:
plot( out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,2],type="l", col="red" )
plot(out[,1], out[,2]+1, type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,2], col="red" )
# plot the prey densities in blue:
plot(out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,2], col="red" )
plot(out[,1],out[,2],
xlab="Prey",
ylab="Predator")
plot(out[,1],out[,2],
xlab="Prey",
ylab="Predator", type="lines")
plot(out[,1],out[,2],
xlab="Prey",
ylab="Predator", type="l")
plot(out[,1],out[,2],
xlab="Prey",
ylab="Predator", type="l")
plot(out[,1],out[,2],type="l"
xlab="Prey",
plot(out[,1],out[,2],type="l",
xlab="Prey",
ylab="Predator")
# plot the prey densities in blue:
plot(out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,2], col="red" )
plot(out[,1],out[,2],type="l",
xlab="Prey",
ylab="Predator")
# plot the prey densities in blue:
plot(out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
View(out)
# calculate the two growth rates:
dndt=(r*n)-(a*n*p)
np=c(2,3)
p <- np[2]
# extract vector content:
n <- np[1]
dndt=(r*n)-(a*n*p)
dpdt=(a*n*p)-(mu*p)
out <- ode( y = c(0,2,3), func = LV_sys, times = timevec, parms = params)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
View(out)
params<-c("r"=2,"a"=0.2,"mu"=0.1)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
plot(out[,2],out[,2],type="l",
xlab="Prey",
ylab="Predator")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,20),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
timevec=seq(0,200,1)
params<-c("r"=2,"a"=0.2,"mu"=0.15)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,20),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
LV_sys <- function(t, np, params) {
# extract vector content:
n <- np[1]
p <- np[2]
# calculate the two growth rates:
dndt=(r*n)-(a*n*p)
dpdt=(a*n*p)-(mu*p)
return(list(c(dndt, dpdt ))) # the result as a vector in a list
}
rm(list=ls())
library("deSolve")
# r=2
# a=0.2
# mu=0.15
timevec=seq(0,200,1)
params<-c("r"=2,"a"=0.2,"mu"=0.15)
LV_sys <- function(t, np, params) {
# extract vector content:
n <- np[1]
p <- np[2]
# calculate the two growth rates:
dndt=(r*n)-(a*n*p)
dpdt=(a*n*p)-(mu*p)
return(list(c(dndt, dpdt ))) # the result as a vector in a list
}
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,20),type="l", col="blue")
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
params<-list("r"=2,"a"=0.2,"mu"=0.15)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,20),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
params<-list("r"=3,"a"=0.2,"mu"=0.15)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,20),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,30),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
params<-list("r"=5,"a"=0.2,"mu"=0.2)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,30),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,50),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
params<-list("r"=5,"a"=0.2,"mu"=0.5)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,50),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
params<-list("r"=10,"a"=0.2,"mu"=0.3)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,50),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
plot(out[,2],out[,2],type="l",
xlab="Prey",
ylab="Predator")
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,50),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
params<-list("r"=10,"a"=1,"mu"=2)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,50),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,25),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
plot(out[,2],out[,2],type="l",
xlab="Prey",
ylab="Predator")
plot(out[,2],out[,3],type="l",
xlab="Prey",
ylab="Predator")
r=10
a=1
mu=2
LV_isoclines<-function(r,a,mu){
# dndt=r*n-a*n*p
# dpdt=a*n*p-mu*p
pp=r/a
nn=mu/a
isos=c("preyiso"=pp, "prediso"=nn, "preytriv"=0,"predtriv"=0)
plot(x=1,y=1, las=1,col="white",xlim=c(0,5),ylim=c(0,5),
xlab="Prey", ylab="Predator")
abline(NULL,NULL, h=isos["predtriv"], col="orange", lwd=3)
abline(NULL,NULL, v=isos["preytriv"], col="green", lwd=3)
abline(NULL,NULL, v=isos["prediso"], col="orange", lwd=3)
abline(NULL,NULL, h=isos["preyiso"], col="green", lwd=3)
legend(3,3, legend=c("Predator", "Prey"),
col=c("Orange", "Green"), lty=1:2, cex=0.8,
title="Actors", text.font=4, bg='darkseagreen1')
return(isos)
}
LV_isoclines(r,a, mu)
r=10
a=1
mu=4
LV_isoclines(r,a, mu)
params<-list("r"=10,"a"=1,"mu"=4)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,25),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
plot(out[,2],out[,3],type="l",
xlab="Prey",
ylab="Predator")
# r=2
# a=0.2
# mu=0.15
timevec=seq(0,20,1)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
plot(out[,2],out[,3],type="l",
xlab="Prey",
ylab="Predator")
# r=2
# a=0.2
# mu=0.15
timevec=seq(0,200,0.1)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,25),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
plot(out[,2],out[,3],type="l",
xlab="Prey",
ylab="Predator")
# r=2
# a=0.2
# mu=0.15
timevec=seq(0,20,0.1)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,25),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
plot(out[,2],out[,3],type="l",
xlab="Prey",
ylab="Predator")
params<-list("r"=1.2,"a"=0.1,"mu"=0.4)
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,25),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
plot(out[,2],out[,3],type="l",
xlab="Prey",
ylab="Predator")
params<-list("r"=1.2,"a"=0.1,"mu"=0.4)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/Jacobian.R")
Jacobian(params)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/Jacobian.R")
Jacobian(params)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/Jacobian.R")
Jacobian(params)
J<-Jacobian(params)
eigen(J)
E=eigen(J)
r<-re(E$vectors)
r<-real(E$vectors)
r<-E.real()
r<-E.real()
r<-Re(E)
r<-Re(E$vectors)
View(r)
View(J)
str(E0)
str(E)
rettime=-1/max(Re(E$values))
period=2*pi/(max(Im(E$values)))
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
timeandperiod(params)
setwd("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3")
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/timeandperiod.R")
timeandperiod(params)
source("C:/Users/mwagr/OneDrive/Documenten/MSc Evolutionary Biology/Modelling Biological Systems BIOS13/Week 3/predprey2.R")
out <- ode( y = c(2,3), func = LV_sys, t = timevec, parms = params)
# plot the prey densities in blue:
plot(out[,1], out[,2], ylim=c(0,25),type="l", col="blue")
# add the predator densities in red:
lines( out[,1], out[,3], col="red" )
source("~/.active-rstudio-document")
LV_K_isoclines(r,a, mu)
source("~/.active-rstudio-document")
LV_K_isoclines(params)
plot(x=1,y=1, las=1,col="white",xlim=c(0,20),ylim=c(0,20),
xlab="Prey", ylab="Predator")
abline(NULL,NULL, h=isos["predtriv"], col="orange", lwd=3)
source("~/.active-rstudio-document")
LV_K_isoclines(params)
source("~/.active-rstudio-document")
LV_K_isoclines(params)
source("~/.active-rstudio-document")
LV_K_isoclines(params)
